import { defineEventHandler, readBody } from 'h3'

export default defineEventHandler(async (event) => {
  try {
    console.log('üß™ Testing client status notifications...')

    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const { status = 'confirmed', telegram_id = '1231157381' } = await readBody(event)

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const testBooking = {
      id: 'test-123',
      boat: { name: 'Kiss' },
      start_time: new Date().toISOString(),
      profile: {
        telegram_id: telegram_id
      }
    }

    // –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ)
    const statusMessages: Record<string, string> = {
      confirmed: `‚úÖ –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–¥–∫–∏ "${testBooking.boat.name}" –Ω–∞ ${new Date(testBooking.start_time).toLocaleDateString('ru-RU')} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!`,
      cancelled: `‚ùå –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–¥–∫–∏ "${testBooking.boat.name}" –Ω–∞ ${new Date(testBooking.start_time).toLocaleDateString('ru-RU')} –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.`,
      pending: `‚è≥ –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–¥–∫–∏ "${testBooking.boat.name}" –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.`
    }

    const message = statusMessages[status] || '–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω'

    console.log('üì± Sending status notification to client:', {
      status,
      telegram_id,
      message
    })

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const token = process.env.TELEGRAM_BOT_TOKEN
    if (!token) {
      return {
        success: false,
        error: 'Telegram token not configured'
      }
    }

    const apiUrl = `https://api.telegram.org/bot${token}/sendMessage`

    const response = await fetch(apiUrl, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: telegram_id,
        text: message,
        parse_mode: 'HTML'
      })
    })

    const result = await response.json()

    return {
      success: response.ok,
      status_tested: status,
      telegram_id_tested: telegram_id,
      message_sent: message,
      telegram_response: result
    }
  } catch (error) {
    console.error('‚ùå Test failed:', error)
    return {
      success: false,
      error: 'Test failed',
      details: (error as Error).message
    }
  }
})
