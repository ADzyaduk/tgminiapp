export default defineNuxtPlugin(() => {
  if (!process.client) return;

  const router = useRouter();
  const nuxtApp = useNuxtApp();
  const { user, refreshUserSession, profile } = useAuth(); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å useAuth() composable

  const MAX_INACTIVITY_MS = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –ø—Ä–æ—Å—Ç–æ—è
  const NAVIGATION_TIMEOUT_MS = 20000; // –£–≤–µ–ª–∏—á–∏–º —Ç–∞–π–º–∞—É—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–æ 20 —Å–µ–∫—É–Ω–¥
  const FETCH_TIMEOUT_MS = 30000; // 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ HTTP –∑–∞–ø—Ä–æ—Å
  const MAX_NAVIGATION_FAILURES_BEFORE_RELOAD = 2;

  let lastActivityTime = Date.now();
  let navigationTimeoutId: NodeJS.Timeout | null = null;
  let isCurrentlyNavigating = false;
  let navigationFailures = 0;

  const resetStoresState = () => {
    console.log('üîÑ –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è Pinia stores...');
    if (nuxtApp.$pinia) {
      for (const storeName in nuxtApp.$pinia.state.value) {
        const store = nuxtApp.$pinia.state.value[storeName];
        if (store && typeof store.$reset === 'function') {
          try {
            store.$reset();
            console.log(`Store ${storeName} —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω.`);
          } catch (e) {
            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å store ${storeName}:`, e);
          }
        }
      }
    }
  };

  const handleAppResume = async () => {
    console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–æ—è.');
    lastActivityTime = Date.now();

    // 1. –û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (user.value) { // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–ª–æ–≥–∏–Ω–µ–Ω
      try {
        console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        await refreshUserSession(); // –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
        console.log('–°–µ—Å—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.');
      } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        // –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
      }
    }

    // 2. –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–æ—Ä–æ–≤, —á—Ç–æ–±—ã –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
    resetStoresState();

    // 3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —Ç–æ—á–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
    // –≠—Ç–æ –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π, –Ω–æ —á–∞—Å—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
    console.warn('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø—Ä–æ—Å—Ç–æ—è...');
    router.go(0); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –º–∞—Ä—à—Ä—É—Ç
  };

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const activityEvents: (keyof WindowEventMap)[] = ['mousemove', 'mousedown', 'keydown', 'touchstart', 'scroll'];
  activityEvents.forEach(event => {
    window.addEventListener(event, () => {
      const now = Date.now();
      if (now - lastActivityTime > MAX_INACTIVITY_MS / 2) { // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Å—Ç–æ—è
         // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–æ –ª–∏ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–æ—è
        if (Date.now() - lastActivityTime > MAX_INACTIVITY_MS) {
            handleAppResume();
        }
      }
      lastActivityTime = now;
    });
  });

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤–∫–ª–∞–¥–∫–∏ (–≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É)
  document.addEventListener('visibilitychange', () => {
    if (document.visibilityState === 'visible') {
      if (Date.now() - lastActivityTime > MAX_INACTIVITY_MS) {
        console.log('–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø–æ—Å–ª–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–æ—è.');
        handleAppResume();
      }
      lastActivityTime = Date.now(); // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
    }
  });

  // --- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–æ—É—Ç–µ—Ä–∞ –∏ fetch (–æ—Å—Ç–∞–≤–ª—è–µ–º, –Ω–æ —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –ø—Ä–æ—Å—Ç–æ–µ) ---
  const forceAppReload = (reason: string) => {
    console.warn(`üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
    window.location.reload();
  };

  router.beforeEach((to, from) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (Date.now() - lastActivityTime > MAX_INACTIVITY_MS) {
      console.log('–ù–∞—á–∞–ª–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–æ—è.');
      // –í–º–µ—Å—Ç–æ handleAppResume, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏,
      // –ø—Ä–æ—Å—Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–æ—Ä—ã. –°–µ—Å—Å–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –ø–æ visibilitychange/activity.
      resetStoresState(); 
    }
    lastActivityTime = Date.now(); // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

    if (isCurrentlyNavigating) {
      if (navigationTimeoutId) clearTimeout(navigationTimeoutId);
    }
    isCurrentlyNavigating = true;

    navigationTimeoutId = setTimeout(() => {
      console.error(`‚ùå –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ "${to.fullPath}" –∑–∞–Ω—è–ª–∞ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (${NAVIGATION_TIMEOUT_MS}ms).`);
      isCurrentlyNavigating = false;
      navigationFailures++;
      if (navigationFailures >= MAX_NAVIGATION_FAILURES_BEFORE_RELOAD) {
        forceAppReload(`—Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –Ω–∞–≤–∏–≥–∞—Ü–∏–π (${navigationFailures})`);
      } else {
        console.warn(`–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ (window.location) –Ω–∞: ${to.fullPath}`);
        window.location.href = to.fullPath;
      }
    }, NAVIGATION_TIMEOUT_MS);
  });

  router.afterEach(() => {
    if (navigationTimeoutId) clearTimeout(navigationTimeoutId);
    isCurrentlyNavigating = false;
    navigationFailures = 0;
    lastActivityTime = Date.now(); // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  });

  router.onError((error) => {
    console.error('üö® –û—à–∏–±–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞:', error);
    if (navigationTimeoutId) clearTimeout(navigationTimeoutId);
    isCurrentlyNavigating = false;
    navigationFailures++;
    if (navigationFailures >= MAX_NAVIGATION_FAILURES_BEFORE_RELOAD) {
      forceAppReload(`–æ—à–∏–±–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞ –∏ ${navigationFailures} –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫`);
    }
  });

  const originalFetch = window.fetch;
  const activeFetchControllers = new Set<AbortController>();

  window.fetch = async (input: RequestInfo | URL, init?: RequestInit): Promise<Response> => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ–¥ fetch
    if (Date.now() - lastActivityTime > MAX_INACTIVITY_MS) {
        console.log('Fetch –∑–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–æ—è. –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ...');
        // –ù–µ –≤—ã–∑—ã–≤–∞–µ–º handleAppResume, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã—Ö –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ fetch —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é handleAppResume
        resetStoresState();
        if(user.value) await refreshUserSession(); // –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –ø–µ—Ä–µ–¥ –≤–∞–∂–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    }
    lastActivityTime = Date.now(); // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ fetch

    const controller = new AbortController();
    activeFetchControllers.add(controller);
    const fetchTimeoutId = setTimeout(() => {
      console.warn(`‚ö†Ô∏è Fetch –∑–∞–ø—Ä–æ—Å –Ω–∞ "${String(input)}" –æ—Ç–º–µ–Ω–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É (${FETCH_TIMEOUT_MS}ms).`);
      controller.abort();
    }, FETCH_TIMEOUT_MS);

    try {
      const response = await originalFetch(input, {
        ...init,
        signal: controller.signal,
      });
      return response;
    } catch (error) {
      // ... (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ fetch –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–æ–π –∂–µ)
      if (error.name === 'AbortError') {
        console.log(`Fetch –∑–∞–ø—Ä–æ—Å –Ω–∞ "${String(input)}" –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.`);
      } else {
        console.error(`Fetch –æ—à–∏–±–∫–∞ –¥–ª—è "${String(input)}":`, error);
      }
      throw error;
    } finally {
      clearTimeout(fetchTimeoutId);
      activeFetchControllers.delete(controller);
    }
  };
  
  router.beforeEach(() => {
    if (activeFetchControllers.size > 7) { // –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–ª –ø–æ—Ä–æ–≥
      console.warn(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${activeFetchControllers.size} –∞–∫—Ç–∏–≤–Ω—ã—Ö fetch –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–µ—Ä–µ–¥ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π. –û—Ç–º–µ–Ω—è–µ–º...`);
      activeFetchControllers.forEach(controller => controller.abort());
      activeFetchControllers.clear();
    }
  });

  // Health check –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –æ–±—â–µ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, –Ω–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–æ—Å—Ç–æ–µ
  const healthCheckIntervalId = setInterval(() => {
    const now = Date.now();
    if (isCurrentlyNavigating && (now - lastActivityTime) > NAVIGATION_TIMEOUT_MS + 10000) { // +10 —Å–µ–∫ –±—É—Ñ–µ—Ä
        console.warn('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∑–∞–≤–∏—Å—à–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è (health check).');
        if (navigationTimeoutId) clearTimeout(navigationTimeoutId);
         navigationFailures++;
         isCurrentlyNavigating = false; 
         if (navigationFailures >= MAX_NAVIGATION_FAILURES_BEFORE_RELOAD) {
            forceAppReload(`–∑–∞–≤–∏—Å—à–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è (health check, ${navigationFailures})`);
         } else {
            router.push('/'); 
         }
    }
  }, NAVIGATION_TIMEOUT_MS * 2); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–µ, –Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∞—Å—Ç–æ

  window.addEventListener('beforeunload', () => {
    if (navigationTimeoutId) clearTimeout(navigationTimeoutId);
    clearInterval(healthCheckIntervalId);
    activeFetchControllers.forEach(controller => controller.abort());
  });

  console.log('üõ°Ô∏è –ü–ª–∞–≥–∏–Ω —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (v2 - —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–æ—Å—Ç–æ–µ) –∑–∞–ø—É—â–µ–Ω.');
}); 