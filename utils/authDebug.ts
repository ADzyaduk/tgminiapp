// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
export const debugAuth = () => {
  if (typeof window === 'undefined') return

  console.group('üîç Auth Debug Info')
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
  console.log('üì¶ LocalStorage tokens:')
  const tokens = ['sb-access-token', 'sb-refresh-token', 'sb-auth-token', 'sb-auth-session']
  tokens.forEach(key => {
    const value = localStorage.getItem(key)
    console.log(`  ${key}: ${value ? '‚úÖ EXISTS' : '‚ùå MISSING'}`)
    if (value && key === 'sb-auth-session') {
      try {
        const parsed = JSON.parse(value)
        console.log(`    expires_at: ${new Date(parsed.expires_at * 1000).toLocaleString()}`)
      } catch (e) {
        console.log(`    ‚ö†Ô∏è Invalid JSON`)
      }
    }
  })

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies
  console.log('üç™ Document cookies:')
  if (document.cookie) {
    document.cookie.split(';').forEach(cookie => {
      const [name] = cookie.trim().split('=')
      if (name.includes('sb-') || name.includes('supabase')) {
        console.log(`  ${name}: ‚úÖ EXISTS`)
      }
    })
  } else {
    console.log('  ‚ùå No cookies found')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
  console.log('üåê Browser info:')
  console.log(`  User Agent: ${navigator.userAgent}`)
  console.log(`  Cookie enabled: ${navigator.cookieEnabled}`)
  console.log(`  Protocol: ${window.location.protocol}`)
  console.log(`  Host: ${window.location.host}`)

  console.groupEnd()
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤ dev —Ä–µ–∂–∏–º–µ
if (import.meta.dev && typeof window !== 'undefined') {
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
  ;(window as any).debugAuth = debugAuth
} 